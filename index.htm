<!DOCTYPE html>
<html>

<head>
        <link rel="stylesheet" type="text/css"  href="style.css" /> 
        <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
</head>

<body>

<header>
    Pacman
    <br>
    Loren Tsahalon
    <br>
    Niv Dudovitch
</header>

<nav>
    <a href="#welcome" onclick="ShowSection('welcome')">Welcome</a>
    <br>
    <a href="#log-in" onclick="ShowSection('log-in')">Log-in</a>
    <br>
    <a href="#sign-up" onclick="ShowSection('sign-up')">Sign-up</a>
    <br>
    <a href="#about" onclick="ShowDialog()">About</a>
    <br>
</nav>

<footer>
    conect details
</footer>

<dialog id="about">
    <button onclick="CloseDialog()">X</button>
    <br>
    Niv Dudovitch
    <br>
    Loren Tsahalon
</dialog>

<div id="game" style="visibility: hidden;">
    SCORE:
    <input id="lblScore" type="text"/>
    <br/>
    TIME:
    <input id="lblTime" type="text"/>
    <br/>
    <canvas id="canvas" height="600" width="600"></canvas>
</div>

<div id="welcome" style="visibility: visible;">
    <input type="button" value="log-in" onclick="ShowSection('log-in')">
    <input type="button" value="sign-up" onclick="ShowSection('sign-up')">
</div>

<div id="sign-up" style="visibility: hidden;">
    <h4>Username: </h4>
    <input id="uName" type="text" class="check">
    <br>
    <h4>Password: </h4>
    <input id="pass" type="password" class="check">
    <br>
    <h4>First Name: </h4>
    <input id="fName" type="text" class="check">
    <br>
    <h4>Last Name: </h4>
    <input id="lName" type="text" class="check">
    <br>
    <h4>Email: </h4>
    <input id="mail" type = "email" placeholder = "name@domain.com" class="check"> 
    <br>
    <h4>Birth Date: </h4>
    <input id="bdate" type="date" class="check">
    <br>

    <input type="button" value="Sign up" onclick="AddUser(document.getElementById('uName').value,document.getElementById('pass').value,
    document.getElementById('fName').value,document.getElementById('lName').value,document.getElementById('mail').value,document.getElementById('bdate').value)">
    
</div>

<div id="log-in" style="visibility: hidden;">
    <h1>Username: </h1>
    <br>
    <input id="username" type="text">
    <h1>Password: </h1>
    <br>
    <input id="passw" type="text">
    <br>

    <input type="button" value="sign-in" onclick="CheckSignIn(document.getElementById('username').value,
    document.getElementById('passw').value)">
</div>


<div id="setting" style="visibility: hidden;">
    <h4>move up controll: </h4>
    <input id="move_up" type="text" onkeydown="saveUp(event)">
    <h4>move down controll: </h4>
    <input id="move_down" type="text" onkeydown="saveDown(event)">
    <h4>move right controll: </h4>
    <input id="move_right" type="text" onkeydown="saveRight(event)">
    <h4>move left controll:</h4>
    <input id="move_left" type="text" onkeydown="saveLeft(event)">
    <h4>number of balls: (between 50 to 90) </h4>
    <input id="num_of_balls" type="text">
    <h4>color of 25 ball: </h4>
    <input id="color_25_ball" type="text">
    <h4>color of 15 ball: </h4>
    <input id="color_15_ball" type="text">
    <h4>color of 5 ball: </h4>
    <input id="color_5_ball" type="text">
    <script>
    balls_number = document.getElementById('num_of_balls').value;
    </script>
    <input type="button" value="Random" onclick="random()">
    <input type="button" value="Done" onclick="CheckSettings(document.getElementById('num_of_balls').value,
    document.getElementById('color_25_ball').value,document.getElementById('color_15_ball').value,
    document.getElementById('color_5_ball').value)">
</div>

<script type="text/javascript">
    var context = canvas.getContext("2d");
    var shape = new Object();
    var board;
    var score;
    var move_direction;
    var ball_25;
    var ball_15;
    var ball_5;
    var number_of_eating;
    var number_of_lives;
    var balls_number;
    var win_score;
    var pac_color;
    var start_time;
    var time_elapsed;
    var interval;
    var users;
    var sound;
    var up;
    var down;
    var left;
    var right;

    class User{
        constructor(username,password,fName,lName,email,bDate) {
            this.username = username;
            this.password = password;
            this.fName = fName;
            this.lName = lName;
            this.email = email;
            this.bDate = bDate;
        }
    }

    $(document).ready(function(){
        users = new Array();
        var user = new User('a','a','a','a','a@a.a','1.1.1991');
        users.push(user);
    })

    function AddUser(username,password,fName,lName,email,bdate){
        if(!validateFillFields('.signupFields')){
            window.alert("All fields have to be fill!")
        }
        else if(fName.value.matches(".\\d.")|| lName.value.matches(".\\d.")){
            window.alert("First and Last name can't contain numbers!")
        }
        else{
            var user = new User(username,password,fName,lName,email,bdate);
            users.push(user);
            ShowSection('setting');
        }
    }

    function CheckSignIn(username,password){
        if(validateFillFields('.loginFields')){
            var isExist=false;
            users.forEach(user => {
                if(user.username==username && user.password==password){
                    isExist=true;
                }
            });
            if(isExist){
                ShowSection('setting');
            }
            else{
                window.alert("Username or password are wrong! Please try again.");
            }   
        }
        else{
            window.alert("Fill both username and password!");
        }
    }

    function validateFillFields(check) {
        var isValid = true;
        $(check).each(function() {
            if ( $(this).val() === '' )
                isValid = false;
        });
        return isValid;
    }


    function CheckSettings(num_of_balls, color_25_ball, color_15_ball, color_5_ball){
        // if($("#c_up,#c_down,#c_right,#c_left,#num_of_balls,#color_25_ball,#color_15_ball,#color_5_ball:empty").length>0){
        //     window.alert("Fill all fields!")
        // }
        // else {
            ball_25 = color_25_ball;
            ball_15 = color_15_ball;
            ball_5 = color_5_ball;
            Start(num_of_balls,color_25_ball,color_15_ball,color_5_ball);
            ShowSection('game');
        // }
        //to-do check fields 
    }

    function random(){
        ball_25 = 'red';
        ball_15 = 'green';
        ball_5 = 'black';  
        up = 'ArrowUp';
        down ='ArrowDown';
        right = 'ArrowRight';
        left = 'ArrowLeft';  
        ShowSection('game');
        Start(50,'red','green','black');
    }

    function ShowSection(id)
    {
    	//hide all sections
    	var div1 = document.getElementById('welcome');
    	div1.style.visibility="hidden";
    	var div2 = document.getElementById('game');
    	div2.style.visibility="hidden";
        var div3 = document.getElementById('log-in');
    	div3.style.visibility="hidden";
        var div4 = document.getElementById('sign-up');
    	div4.style.visibility="hidden";
        var div5 = document.getElementById('setting');
    	div5.style.visibility="hidden";
        //show only one section
		var selected = document.getElementById(id);
    	selected .style.visibility="visible";
    }


    function ShowDialog(){
        document.getElementById("about").showModal();
    }

    function CloseDialog(){
        document.getElementById("about").close();
    }

    //o-empty
    //1-food_25
    //2-food_15
    //3-food_5
    //4-obstacle
    //10-packman
    //12-monster_type1

    function Start(food_remain_input,color_25_ball,color_15_ball,color_5_ball,monster_amount) {
        sound = new sound("music.mp3");
        sound.play();
        board = new Array();
        score = 0;
        number_of_eating = 0;
        pac_color = "yellow";
        var cnt = 100;
        var food_remain = food_remain_input;
        //to-do food of scores
        var food_25_remain = food_remain_input*0.6;
        food_25_remain = Math.floor(food_25_remain);
        var food_15_remain = food_remain_input*0.3;
        food_15_remain = Math.floor(food_15_remain);
        var food_5_remain = food_remain_input*0.1;
        food_5_remain = Math.floor(food_5_remain);
        var pacman_remain = 1;
        start_time = new Date();
        var monster_remain = monster_amount;
        number_of_lives = 3;
        for (var i = 0; i < 10; i++) {
            board[i] = new Array();
            //put obstacles in (i=3,j=3) and (i=3,j=4) and (i=3,j=5), (i=6,j=1) and (i=6,j=2)
            for (var j = 0; j < 10; j++) {
                if((monster_remain > 0) && ((i===0 && j===0) || (i===9 && j===0) || (i===0 && j===9) || (i===9 && j===9))){
                    monster_remain--;
                    board[i][j]=12;
                }
                if ((i === 3 && j === 3) || (i === 3 && j === 4) || (i === 3 && j === 5) || (i === 6 && j === 1) || (i === 6 && j === 2)) {
                    board[i][j] = 4;
                } else {
                    var randomNum = Math.random();
                    if (randomNum <= 1.0 * food_remain / cnt) {
                        if(food_25_remain>0){
                            food_remain--;
                            food_25_remain--;
                            board[i][j] = 1;
                        }
                        else if(food_15_remain>0){
                            food_remain--;
                            food_15_remain--;
                            board[i][j] = 2;
                        }
                        else if(food_5_remain>0){
                            food_remain--;
                            food_5_remain--;
                            board[i][j] = 3;
                        }
                    } else if (randomNum < 1.0 * (pacman_remain + food_remain) / cnt) {
                        shape.i = i;
                        shape.j = j;
                        pacman_remain--;
                        board[i][j] = 10;
                    } else {
                        board[i][j] = 0;
                    }
                    cnt--;
                }
            }
        }
        while (food_remain > 0) {
            var emptyCell = findRandomEmptyCell(board);
            if(food_25_remain>0){
                food_remain--;
                food_25_remain--;
                board[emptyCell[0]][emptyCell[1]] = 1;
            }
            else if(food_15_remain>0){
                food_remain--;
                food_15_remain--;
                board[emptyCell[0]][emptyCell[1]] = 2;
            }
            else if(food_5_remain>0){
                food_remain--;
                food_5_remain--;
                board[emptyCell[0]][emptyCell[1]] = 3;
            }
            else { food_remain = 0;}
        }
        keysDown = {};
        addEventListener("keydown", function (e) {
            if(e.code == up)
            keysDown[0] = true;
            if(e.code == down)
            keysDown[1] = true;
            if(e.code == right)
            keysDown[2] = true;
            if(e.code == left)
            keysDown[3] = true;
        }, false);
        // addEventListener("keyup", function (e) {
        //     if(e.code == up)
        //     keysDown[0] = false;
        //     if(e.code == down)
        //     keysDown[1] = false;
        //     if(e.code == right)
        //     keysDown[2] = false;
        //     if(e.code == left)
        //     keysDown[3] = false;
        // }, false);
        interval = setInterval(UpdatePosition, 250);
    }


    function findRandomEmptyCell(board) {
        var i = Math.floor((Math.random() * 9) + 1);
        var j = Math.floor((Math.random() * 9) + 1);
        while (board[i][j] !== 0) {
            i = Math.floor((Math.random() * 9) + 1);
            j = Math.floor((Math.random() * 9) + 1);
        }
        return [i, j];
    }

    /**
     * @return {number}
     */
    function GetKeyPressed() {
        if (keysDown[0]) {
            move_direction = 0;
            return 0;
        }
        if (keysDown[1]) {
            move_direction = 1;
            return 1;
        }
        if (keysDown[2]) {
            move_direction = 2;
            return 2;
        }
        if (keysDown[3]) {
            move_direction = 3;
            return 3;
        }
    }

    function Draw() {
        context.clearRect(0, 0, canvas.width, canvas.height); //clean board
        lblScore.value = score;
        lblTime.value = time_elapsed;
        for (var i = 0; i < 10; i++) {
            for (var j = 0; j < 10; j++) {
                var center = new Object();
                center.x = i * 60 + 30;
                center.y = j * 60 + 30;
                if (board[i][j] === 10) {
                    context.beginPath();
                    if(move_direction === 0){//pacman move up
                        context.arc(center.x, center.y, 30, -0.35 * Math.PI, 1.35 * Math.PI); // half circle    
                    }
                    else if(move_direction === 1){//pacman move down
                        context.arc(center.x, center.y, 30, 0.65 * Math.PI, 2.35 * Math.PI); // half circle    
                    }
                    else if(move_direction === 2){//pacman move right
                        context.arc(center.x, center.y, 30, 0.15 * Math.PI, 1.85 * Math.PI); // half circle    
                    }
                    else if(move_direction === 3){//pacman move left
                        context.arc(center.x, center.y, 30, 1.15 * Math.PI, 2.85 * Math.PI); // half circle    
                    }
                    else context.arc(center.x, center.y, 30, 0.15 * Math.PI, 1.85 * Math.PI); // half circle    
                    context.lineTo(center.x, center.y);
                    context.fillStyle = pac_color; //color
                    context.fill();
                    context.beginPath();
                    if(move_direction === 0){//pacman move up
                        context.arc(center.x + 15, center.y - 5, 5, 0, 2 * Math.PI); // circle
                    }
                    else if(move_direction === 1){//pacman move down
                        context.arc(center.x - 15, center.y + 5, 5, 0, 2 * Math.PI); // circle
                    }
                    else if(move_direction === 2){//pacman move right
                        context.arc(center.x + 5, center.y - 15, 5, 0, 2 * Math.PI); // circle
                    }
                    else if(move_direction === 3){//pacman move left
                        context.arc(center.x - 5, center.y - 15, 5, 0, 2 * Math.PI); // circle
                    }
                    else context.arc(center.x + 5, center.y - 15, 5, 0, 2 * Math.PI); // circle
                    context.fillStyle = "black"; //color
                    context.fill();
                } else if (board[i][j] === 1) {
                    context.beginPath();
                    context.arc(center.x, center.y, 15, 0, 2 * Math.PI); // circle
                    context.fillStyle = ball_25; //color
                    context.fill();
                } else if (board[i][j] === 2) {
                    context.beginPath();
                    context.arc(center.x, center.y, 15, 0, 2 * Math.PI); // circle
                    context.fillStyle = ball_15; //color
                    context.fill();
                } else if (board[i][j] === 3) {
                    context.beginPath();
                    context.arc(center.x, center.y, 15, 0, 2 * Math.PI); // circle
                    context.fillStyle = ball_5; //color
                    context.fill();
                } else if (board[i][j] === 4) {
                    context.beginPath();
                    context.rect(center.x - 30, center.y - 30, 60, 60);
                    context.fillStyle = "grey"; //color
                    context.fill();
                } else if (board[i][j] === 12) {
                    context.beginPath();
                    context.rect(center.x - 30, center.y - 30, 60, 60);
                    context.fillStyle = "green"; //color
                    context.fill();
                }
            }
        }


    }

    function UpdatePosition() {
        board[shape.i][shape.j] = 0;
        var x = GetKeyPressed();
        if (x === 0) {
            if (shape.j > 0 && board[shape.i][shape.j - 1] !== 4) {
                shape.j--;
            }
        }
        if (x === 1) {
            if (shape.j < 9 && board[shape.i][shape.j + 1] !== 4) {
                shape.j++;
            }
        }
        if (x === 2) {
            if (shape.i < 9 && board[shape.i + 1][shape.j] !== 4) {
                shape.i++;
            }
        }
        if (x === 3) {
            if (shape.i > 0 && board[shape.i - 1][shape.j] !== 4) {
                shape.i--;
            }
        }
        
        keysDown[0] = false;
        keysDown[1] = false;
        keysDown[2] = false;
        keysDown[3] = false;
        
        if (board[shape.i][shape.j] === 1) {
            score+=25;
            number_of_eating++;
        }
        if (board[shape.i][shape.j] === 2) {
            score+=15;
            number_of_eating++;
        }
        if (board[shape.i][shape.j] === 3) {
            score+=5;
            number_of_eating++;
        }
        if (board[shape.i][shape.j] === 12) {
            score-=10;
            number_of_lives--;
        }
 
        
        board[shape.i][shape.j] = 10;
        var currentTime = new Date();
        time_elapsed = (currentTime - start_time) / 1000;
        if (score >= 20 && time_elapsed <= 10) {
            pac_color = "green";
        }
        if (number_of_eating === num_of_balls) {//to-do change the 50 to somthing else by the number of balls
            window.clearInterval(interval);
            sound.stop();
            window.alert("Game completed");
        } else {
            Draw();
        }
    }

    function sound(src) {
        this.sound = document.createElement("audio");
        this.sound.src = src;
        this.sound.setAttribute("preload", "auto");
        this.sound.setAttribute("controls", "none");
        this.sound.style.display = "none";
        document.body.appendChild(this.sound);
        this.play = function(){
            this.sound.play();
        }
        this.stop = function(){
            this.sound.pause();
        }
    }

    function saveUp(event){
        up = event.keyCode;
    }

    function saveDown(event){
        down = event.keyCode;
    }

    function saveRight(event){
        right = event.keyCode;
    }

    function saveLeft(event){
        left = event.keyCode;
    }

</script>
</body>

</html>